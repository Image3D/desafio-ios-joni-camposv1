//
//  CharacterExpensiveComicInteractorTests.swift
//  desafio-ios-joni-campos
//
//  Created by Joni de Campos on 27/04/20.
//  Copyright (c) 2020 Joni de Campos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

//@testable import desafio_ios_joni_campos
@testable import Personagens_Marvel
import XCTest

class CharacterExpensiveComicInteractorTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: CharacterExpensiveComicInteractor!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupCharacterExpensiveComicInteractor()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupCharacterExpensiveComicInteractor()
  {
    sut = CharacterExpensiveComicInteractor()
  }
  
  // MARK: Test doubles
  
  class CharacterExpensiveComicPresentationLogicSpy: CharacterExpensiveComicPresentationLogic
  {
    var presentSomethingCalled = false
    
    func presentSomething(response: CharacterExpensiveComic.Something.Response)
    {
      presentSomethingCalled = true
    }
  }
  
  // MARK: Tests
  
  func testDoSomething()
  {
    // Given
    let spy = CharacterExpensiveComicPresentationLogicSpy()
    sut.presenter = spy
    let request = CharacterExpensiveComic.Something.Request()
    
    // When
    sut.doSomething(request: request)
    
    // Then
    XCTAssertTrue(spy.presentSomethingCalled, "doSomething(request:) should ask the presenter to format the result")
  }
}
