//
//  CharacterDetailsPresenterTests.swift
//  desafio-ios-joni-campos
//
//  Created by Joni de Campos on 29/04/20.
//  Copyright (c) 2020 Joni de Campos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Personagens_Marvel
import XCTest

class CharacterDetailsPresenterTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: CharacterDetailsPresenter!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupCharacterDetailsPresenter()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupCharacterDetailsPresenter()
  {
    sut = CharacterDetailsPresenter()
  }
  
  // MARK: Test doubles
  
  class CharacterDetailsDisplayLogicSpy: CharacterDetailsDisplayLogic
  {
    var displaySomethingCalled = false
    
    func displaySomething(viewModel: CharacterDetails.Something.ViewModel)
    {
      displaySomethingCalled = true
    }
  }
  
  // MARK: Tests
  
  func testPresentSomething()
  {
    // Given
    let spy = CharacterDetailsDisplayLogicSpy()
    sut.viewController = spy
    let response = CharacterDetails.Something.Response()
    
    // When
    sut.presentSomething(response: response)
    
    // Then
    XCTAssertTrue(spy.displaySomethingCalled, "presentSomething(response:) should ask the view controller to display the result")
  }
}
