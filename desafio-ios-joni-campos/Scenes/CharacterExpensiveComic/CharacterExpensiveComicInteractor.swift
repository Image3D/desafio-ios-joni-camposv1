//
//  CharacterExpensiveComicInteractor.swift
//  desafio-ios-joni-campos
//
//  Created by Joni de Campos on 15/04/20.
//  Copyright (c) 2020 Joni de Campos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CharacterExpensiveComicBusinessLogic
{
    func doSomething(request: CharacterExpensiveComic.Something.Request)
}

protocol CharacterExpensiveComicDataStore
{
    //var name: String { get set }
}

class CharacterExpensiveComicInteractor: CharacterExpensiveComicBusinessLogic, CharacterExpensiveComicDataStore
{
    var presenter: CharacterExpensiveComicPresentationLogic?
    var worker: CharacterExpensiveComicWorker?
    //var name: String = ""
    
    // MARK:- Do something
    
    func doSomething(request: CharacterExpensiveComic.Something.Request)
    {
       
        
        Services.callAPIMarvelCharactersID{ (result) in
            
            oExpensive = result
            
            let response = CharacterExpensiveComic.Something.Response(resultado: result)
            self.presenter?.presentSomething(response: response)
            
        }
        
        
        
    }
}
