//
//  ListCharactersInteractor.swift
//  desafio-ios-joni-campos
//
//  Created by Joni de Campos on 15/04/20.
//  Copyright (c) 2020 Joni de Campos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
//page counter
   var page = 0
   


protocol ListCharactersBusinessLogic
{
    func doSomething(request: ListCharacters.Something.Request)
    func proximaPagina()
}

protocol ListCharactersDataStore
{
  //var name: String { get set }
}

class ListCharactersInteractor: ListCharactersBusinessLogic, ListCharactersDataStore
{
    
   
    var presenter: ListCharactersPresentationLogic?
    var worker: ListCharactersWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func doSomething(request: ListCharacters.Something.Request)
    {
        //    worker = ListCharactersWorker()
        //    worker?.doSomeWork()
        
        // call API da Marvel
        
    let offset = 0
        
        
        Services.callAPIMarvelCharacters(offset: offset){ (result) in
            
            oComics = result
            
            let response = ListCharacters.Something.Response(resultado: result)
            self.presenter?.presentSomething(response: response)
            
        }
        
        
    }
    
    
    func proximaPagina() -> CharacterDataWrapper{
        page += 1
        let offset = page * 20
        
        
         Services.callAPIMarvelCharacters(offset: offset){ (result) in
                  
                  oComics = result
            
           return oComics
                  
//                  let response = ListCharacters.Something.Response(resultado: result)
//                  self.presenter?.presentSomething(response: response)
                  
              }
    }
    
    
    
    
    
}
